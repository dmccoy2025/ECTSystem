// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable

namespace AF.ECT.Data.Entities;

/// <summary>
/// Represents page-level access control rules based on user groups, workflows, and statuses.
/// </summary>
/// <remarks>
/// CorePageAccess defines granular access permissions that control which user groups can access
/// specific pages based on the workflow and workflow status context. This enables dynamic access
/// control where permissions change based on the case type and current workflow state.
/// 
/// The Access field defines the permission level (read, write, admin, etc.), while WorkflowId
/// and StatusId provide context-specific filtering. This allows the same user group to have
/// different access levels to the same page depending on what they're working on.
/// </remarks>
public partial class CorePageAccess
{
    /// <summary>
    /// Gets or sets the Map Id identifier.
    /// </summary>
    public int MapId { get; set; }

    /// <summary>
    /// Gets or sets the Status Id identifier.
    /// </summary>
    public int StatusId { get; set; }

    /// <summary>
    /// Gets or sets the Group Id identifier.
    /// </summary>
    public byte GroupId { get; set; }

    /// <summary>
    /// Gets or sets the Workflow Id identifier.
    /// </summary>
    public byte WorkflowId { get; set; }

    /// <summary>
    /// Gets or sets the Access.
    /// </summary>
    public byte Access { get; set; }

    /// <summary>
    /// Gets or sets the Page Id identifier.
    /// </summary>
    public int PageId { get; set; }

    /// <summary>
    /// Gets or sets the Group.
    /// </summary>
    public virtual CoreUserGroup Group { get; set; } = null!;
}
