// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable

namespace AF.ECT.Data.Entities;

/// <summary>
/// Represents automated email reminder configuration for specific workflow statuses.
/// </summary>
/// <remarks>
/// <para>
/// Defines when and how often reminder emails should be sent for cases in specific workflow statuses.
/// Ensures responsible parties are notified when cases require attention or action.
/// </para>
/// <para>
/// Example: Send reminder email every 7 days to the assigned group when an LOD case
/// is in "Awaiting Medical Documentation" status for Army component.
/// </para>
/// </remarks>
public partial class ReminderEmailSetting
{
    /// <summary>
    /// Gets or sets the Id identifier.
    /// </summary>
    public int Id { get; set; }

    /// <summary>
    /// Gets or sets the Workflow Id identifier.
    /// </summary>
    public byte WorkflowId { get; set; }

    /// <summary>
    /// Gets or sets the Ws Id identifier.
    /// </summary>
    public int WsId { get; set; }

    /// <summary>
    /// Gets or sets the Compo.
    /// </summary>
    public long Compo { get; set; }

    /// <summary>
    /// Gets or sets the Group Id identifier.
    /// </summary>
    public byte GroupId { get; set; }

    /// <summary>
    /// Gets or sets the Template Id identifier.
    /// </summary>
    public int TemplateId { get; set; }

    /// <summary>
    /// Gets or sets the Interval Time.
    /// </summary>
    public int IntervalTime { get; set; }

    /// <summary>
    /// Gets or sets the Group.
    /// </summary>
    public virtual CoreUserGroup Group { get; set; } = null!;

    /// <summary>
    /// Gets or sets the  email address.
    /// </summary>
    public virtual ICollection<ReminderEmail> ReminderEmails { get; set; } = new List<ReminderEmail>();

    /// <summary>
    /// Gets or sets the Template.
    /// </summary>
    public virtual CoreEmailTemplate Template { get; set; } = null!;

    /// <summary>
    /// Gets or sets the Workflow.
    /// </summary>
    public virtual CoreWorkflow Workflow { get; set; } = null!;

    /// <summary>
    /// Gets or sets the Ws.
    /// </summary>
    public virtual CoreWorkStatus Ws { get; set; } = null!;
}
