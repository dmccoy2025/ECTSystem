// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using AF.ECT.Data.Extensions;
using AF.ECT.Data.ResultTypes;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace AF.ECT.Data.Interfaces;

/// <summary>
/// Defines stored procedure operations for the ALOD database context.
/// </summary>
/// <remarks>
/// This interface provides access to database stored procedures and functions.
/// It is auto-generated by EF Core Power Tools and should not be modified manually.
/// </remarks>
public partial interface IALODContextProcedures
{
    /// <summary>
    /// Asynchronously executes the ApplicationWarmupProcess_sp_DeleteLogById stored procedure.
    /// </summary>
    Task<int> ApplicationWarmupProcess_sp_DeleteLogByIdAsync(int? logId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the ApplicationWarmupProcess_sp_FindProcessLastExecutionDate stored procedure.
    /// </summary>
    Task<List<ApplicationWarmupProcess_sp_FindProcessLastExecutionDateResult>> ApplicationWarmupProcess_sp_FindProcessLastExecutionDateAsync(string? processName, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the ApplicationWarmupProcess_sp_GetAllLogs stored procedure.
    /// </summary>
    Task<List<ApplicationWarmupProcess_sp_GetAllLogsResult>> ApplicationWarmupProcess_sp_GetAllLogsAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the ApplicationWarmupProcess_sp_InsertLog stored procedure.
    /// </summary>
    Task<int> ApplicationWarmupProcess_sp_InsertLogAsync(string? processName, DateTime? executionDate, string? message, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the ApplicationWarmupProcess_sp_IsProcessActive stored procedure.
    /// </summary>
    Task<List<ApplicationWarmupProcess_sp_IsProcessActiveResult>> ApplicationWarmupProcess_sp_IsProcessActiveAsync(string? processName, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    // Note: Arcnet operation methods are implemented in ALODContextProcedures.cs
    // Interface methods will be added as needed

    // Note: Command Structure Management methods are implemented in ALODContextProcedures.cs
    // Interface methods will be added as needed

    /// <summary>
    /// Asynchronously executes the core_actions_sp_DeleteOptionAction stored procedure.
    /// </summary>
    Task<int> core_actions_sp_DeleteOptionActionAsync(int? wsaid, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_appeal_sp_GetAppealPostCompletion stored procedure.
    /// </summary>
    Task<List<core_appeal_sp_GetAppealPostCompletionResult>> core_appeal_sp_GetAppealPostCompletionAsync(int? appealId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_APSA_sp_GetPostCompletion stored procedure.
    /// </summary>
    Task<List<core_APSA_sp_GetPostCompletionResult>> core_APSA_sp_GetPostCompletionAsync(int? appealId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_GetMailingListForLOD stored procedure.
    /// </summary>
    Task<List<core_user_sp_GetMailingListForLODResult>> core_user_sp_GetMailingListForLODAsync(int? refId, int? groupId, int? status, string? callingService, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_GetMailingListByUser stored procedure.
    /// </summary>
    Task<List<core_user_sp_GetMailingListByUserResult>> core_user_sp_GetMailingListByUserAsync(int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_GetManagedUsers stored procedure.
    /// </summary>
    Task<List<core_user_sp_GetManagedUsersResult>> core_user_sp_GetManagedUsersAsync(int? userid, string? ssn, string? name, int? status, int? role, int? srchUnit, bool? showAllUsers, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_SearchMamberData stored procedure.
    /// </summary>
    Task<List<core_user_sp_SearchMamberDataResult>> core_user_sp_SearchMamberDataAsync(string? ssn, string? firstName, string? lastName, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_SearchMamberData_Test stored procedure.
    /// </summary>
    Task<List<core_user_sp_SearchMamberData_TestResult>> core_user_sp_SearchMamberData_TestAsync(string? ssn, string? firstName, string? lastName, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_GetMembersUserId stored procedure.
    /// </summary>
    Task<int> core_user_sp_GetMembersUserIdAsync(string? memberSSN, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_GetUserAltTitle stored procedure.
    /// </summary>
    Task<List<core_user_sp_GetUserAltTitleResult>> core_user_sp_GetUserAltTitleAsync(int? userId, int? groupId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_GetUserAltTitleByGroupCompo stored procedure.
    /// </summary>
    Task<List<core_user_sp_GetUserAltTitleByGroupCompoResult>> core_user_sp_GetUserAltTitleByGroupCompoAsync(int? groupId, int? workCompo, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_GetUserName stored procedure.
    /// </summary>
    Task<List<core_user_sp_GetUserNameResult>> core_user_sp_GetUserNameAsync(string? first, string? last, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_GetUsersAltTitleByGroup stored procedure.
    /// </summary>
    Task<List<core_user_sp_GetUsersAltTitleByGroupResult>> core_user_sp_GetUsersAltTitleByGroupAsync(int? groupId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_GetUsersOnline stored procedure.
    /// </summary>
    Task<List<core_user_sp_GetUsersOnlineResult>> core_user_sp_GetUsersOnlineAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_GetWhois stored procedure.
    /// </summary>
    Task<List<core_user_sp_GetWhoisResult>> core_user_sp_GetWhoisAsync(int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_HasHQTechAccount stored procedure.
    /// </summary>
    Task<List<core_user_sp_HasHQTechAccountResult>> core_user_sp_HasHQTechAccountAsync(int? originUserId, string? userEDIPIN, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_IsFinalStatusCode stored procedure.
    /// </summary>
    Task<List<core_user_sp_IsFinalStatusCodeResult>> core_user_sp_IsFinalStatusCodeAsync(byte? statusId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_Logout stored procedure.
    /// </summary>
    Task<int> core_user_sp_LogoutAsync(int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_RegisterUser stored procedure.
    /// </summary>
    Task<int> core_user_sp_RegisterUserAsync(int? userID, string? workCompo, bool? receiveEmail, int? groupID, byte? accountStatus, DateTime? expirationDate, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_RegisterUserRole stored procedure.
    /// </summary>
    Task<int> core_user_sp_RegisterUserRoleAsync(int? userID, short? groupID, byte? status, OutputParameter<int?> userRoleID, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_SearchMemberData stored procedure.
    /// </summary>
    Task<List<core_user_sp_SearchMemberDataResult>> core_user_sp_SearchMemberDataAsync(int? userId, string? ssn, string? lastName, string? firstName, string? middleName, int? srchUnit, int? rptView, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_SearchMemberData_Test stored procedure.
    /// </summary>
    Task<List<core_user_sp_SearchMemberData_TestResult>> core_user_sp_SearchMemberData_TestAsync(int? userId, string? ssn, string? name, int? srchUnit, int? rptView, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_UdpateAccountStatus stored procedure.
    /// </summary>
    Task<int> core_user_sp_UdpateAccountStatusAsync(int? userID, byte? accountStatus, DateTime? expirationDate, string? comment, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_UpdateLogin stored procedure.
    /// </summary>
    Task<List<core_user_sp_UpdateLoginResult>> core_user_sp_UpdateLoginAsync(int? userId, string? sessionId, string? remoteAddr, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_UpdateManagedSettings stored procedure.
    /// </summary>
    Task<int> core_user_sp_UpdateManagedSettingsAsync(int? userId, string? compo, int? roleId, byte? groupId, string? comment, bool? receiveEmail, DateTime? expirationDate, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_user_sp_UpdateUserAltTitle stored procedure.
    /// </summary>
    Task<int> core_user_sp_UpdateUserAltTitleAsync(int? userId, int? groupId, string? newTitle, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_AddSignature stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_AddSignatureResult>> core_workflow_sp_AddSignatureAsync(int? refId, int? moduleType, int? userId, int? actionId, byte? groupId, byte? statusIn, byte? statusOut, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_CopyActions stored procedure.
    /// </summary>
    Task<int> core_workflow_sp_CopyActionsAsync(int? dest_wsoid, int? src_wsoid, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_CopyRules stored procedure.
    /// </summary>
    Task<int> core_workflow_sp_CopyRulesAsync(int? dest_wsoid, int? src_wsoid, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_CopyWorkflow stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_CopyWorkflowResult>> core_workflow_sp_CopyWorkflowAsync(int? fromId, int? toId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_DeleteStatusCode stored procedure.
    /// </summary>
    Task<int> core_workflow_sp_DeleteStatusCodeAsync(int? statusId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetActionsByStep stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetActionsByStepResult>> core_workflow_sp_GetActionsByStepAsync(int? stepId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetActiveCases stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetActiveCasesResult>> core_workflow_sp_GetActiveCasesAsync(int? refId, short? groupId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetAllFindingByReasonOf stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetAllFindingByReasonOfResult>> core_workflow_sp_GetAllFindingByReasonOfAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetAllLocks stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetAllLocksResult>> core_workflow_sp_GetAllLocksAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetCancelReasons stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetCancelReasonsResult>> core_workflow_sp_GetCancelReasonsAsync(byte? workflowId, bool? isFormal, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetCreatableByGroup stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetCreatableByGroupResult>> core_workflow_sp_GetCreatableByGroupAsync(string? compo, byte? module, byte? groupId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetFindingByReasonOfById stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetFindingByReasonOfByIdResult>> core_workflow_sp_GetFindingByReasonOfByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetFindings stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetFindingsResult>> core_workflow_sp_GetFindingsAsync(byte? workflowId, int? groupId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetModuleFromWorkflow stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetModuleFromWorkflowResult>> core_workflow_sp_GetModuleFromWorkflowAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetPageAccessByGroup stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetPageAccessByGroupResult>> core_workflow_sp_GetPageAccessByGroupAsync(byte? workflow, int? status, byte? group, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetPageAccessByWorkflowView stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetPageAccessByWorkflowViewResult>> core_workflow_sp_GetPageAccessByWorkflowViewAsync(string? compo, byte? workflow, int? status, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetPagesByWorkflowId stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetPagesByWorkflowIdResult>> core_workflow_sp_GetPagesByWorkflowIdAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_Workflow_sp_GetPermissions stored procedure.
    /// </summary>
    Task<List<core_Workflow_sp_GetPermissionsResult>> core_Workflow_sp_GetPermissionsAsync(byte? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_Workflow_sp_GetPermissionsByCompo stored procedure.
    /// </summary>
    Task<List<core_Workflow_sp_GetPermissionsByCompoResult>> core_Workflow_sp_GetPermissionsByCompoAsync(byte? workflowId, string? compo, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetReturnReasons stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetReturnReasonsResult>> core_workflow_sp_GetReturnReasonsAsync(byte? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetRwoaReasons stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetRwoaReasonsResult>> core_workflow_sp_GetRwoaReasonsAsync(byte? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetStatusCodesByCompo stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetStatusCodesByCompoResult>> core_workflow_sp_GetStatusCodesByCompoAsync(string? compo, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetStatusCodesByCompoAndModule stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetStatusCodesByCompoAndModuleResult>> core_workflow_sp_GetStatusCodesByCompoAndModuleAsync(string? compo, byte? module, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetStatusCodesBySignCode stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetStatusCodesBySignCodeResult>> core_workflow_sp_GetStatusCodesBySignCodeAsync(short? groupId, byte? module, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetStatusCodesByWorkflow stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetStatusCodesByWorkflowResult>> core_workflow_sp_GetStatusCodesByWorkflowAsync(byte? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetStatusCodesByWorkflowAndAccessScope stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetStatusCodesByWorkflowAndAccessScopeResult>> core_workflow_sp_GetStatusCodesByWorkflowAndAccessScopeAsync(byte? workflowId, byte? accessScope, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetStatusCodeScope stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetStatusCodeScopeResult>> core_workflow_sp_GetStatusCodeScopeAsync(byte? statusID, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetStepsByWorkflow stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetStepsByWorkflowResult>> core_workflow_sp_GetStepsByWorkflowAsync(byte? workflow, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetStepsByWorkflowAndStatus stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetStepsByWorkflowAndStatusResult>> core_workflow_sp_GetStepsByWorkflowAndStatusAsync(byte? workflow, byte? status, string? deathStatus, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetViewableByGroup stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetViewableByGroupResult>> core_workflow_sp_GetViewableByGroupAsync(byte? groupId, byte? module, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetWorkflowByCompo stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetWorkflowByCompoResult>> core_workflow_sp_GetWorkflowByCompoAsync(string? compo, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetWorkflowFromModule stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetWorkflowFromModuleResult>> core_workflow_sp_GetWorkflowFromModuleAsync(int? moduleId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetWorkflowInitialStatusCode stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetWorkflowInitialStatusCodeResult>> core_workflow_sp_GetWorkflowInitialStatusCodeAsync(int? compo, int? module, int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetWorkflowTitle stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetWorkflowTitleResult>> core_workflow_sp_GetWorkflowTitleAsync(int? moduleId, int? subCase, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetWorkflowTitleByWorkStatusId stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetWorkflowTitleByWorkStatusIdResult>> core_workflow_sp_GetWorkflowTitleByWorkStatusIdAsync(int? workflowId, int? subCase, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_InsertAction stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_InsertActionResult>> core_workflow_sp_InsertActionAsync(byte? type, short? stepId, int? target, int? data, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_InsertOptionAction stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_InsertOptionActionResult>> core_workflow_sp_InsertOptionActionAsync(byte? type, int? wsoid, int? target, int? data, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetWorkflowById stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetWorkflowByIdResult>> core_workflow_sp_GetWorkflowByIdAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetWorkflowsByRefId stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetWorkflowsByRefIdResult>> core_workflow_sp_GetWorkflowsByRefIdAsync(int? refId, byte? module, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetWorkflowsByRefIdAndType stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetWorkflowsByRefIdAndTypeResult>> core_workflow_sp_GetWorkflowsByRefIdAndTypeAsync(int? refId, byte? module, int? workflowType, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_GetWorkflowTypes stored procedure.
    /// </summary>
    Task<List<core_workflow_sp_GetWorkflowTypesResult>> core_workflow_sp_GetWorkflowTypesAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_InsertWorkflow stored procedure.
    /// </summary>
    Task<int> core_workflow_sp_InsertWorkflowAsync(int? refId, byte? module, int? workflowType, string? workflowText, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_workflow_sp_UpdateWorkflow stored procedure.
    /// </summary>
    Task<int> core_workflow_sp_UpdateWorkflowAsync(int? workflowId, string? workflowText, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the workflow_sp_GetCurrentUsers stored procedure.
    /// </summary>
    Task<List<workflow_sp_GetCurrentUsersResult>> workflow_sp_GetCurrentUsersAsync(int? refId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the workflow_sp_GetCurrentUsers_ForRR stored procedure.
    /// </summary>
    Task<List<workflow_sp_GetCurrentUsers_ForRRResult>> workflow_sp_GetCurrentUsers_ForRRAsync(int? refId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the workflow_sp_GetCurrentUsers_ForSC stored procedure.
    /// </summary>
    Task<List<workflow_sp_GetCurrentUsers_ForSCResult>> workflow_sp_GetCurrentUsers_ForSCAsync(int? refId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the workflow_sp_GetWorkflowById stored procedure.
    /// </summary>
    Task<List<workflow_sp_GetWorkflowByIdResult>> workflow_sp_GetWorkflowByIdAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the workflow_sp_GetWorkflowsByRefId stored procedure.
    /// </summary>
    Task<List<workflow_sp_GetWorkflowsByRefIdResult>> workflow_sp_GetWorkflowsByRefIdAsync(int? refId, byte? module, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the workflow_sp_GetWorkflowsByRefIdAndType stored procedure.
    /// </summary>
    Task<List<workflow_sp_GetWorkflowsByRefIdAndTypeResult>> workflow_sp_GetWorkflowsByRefIdAndTypeAsync(int? refId, byte? module, int? workflowType, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the workflow_sp_GetWorkflowTypes stored procedure.
    /// </summary>
    Task<List<workflow_sp_GetWorkflowTypesResult>> workflow_sp_GetWorkflowTypesAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the workflow_sp_InsertWorkflow stored procedure.
    /// </summary>
    Task<int> workflow_sp_InsertWorkflowAsync(int? refId, byte? module, int? workflowType, string? workflowText, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the workflow_sp_UpdateWorkflow stored procedure.
    /// </summary>
    Task<int> workflow_sp_UpdateWorkflowAsync(int? workflowId, string? workflowText, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the workstatus_sp_GetWorkstatusById stored procedure.
    /// </summary>
    Task<List<workstatus_sp_GetWorkstatusByIdResult>> workstatus_sp_GetWorkstatusByIdAsync(int? workstatusId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the workstatus_sp_GetWorkstatusesByRefId stored procedure.
    /// </summary>
    Task<List<workstatus_sp_GetWorkstatusesByRefIdResult>> workstatus_sp_GetWorkstatusesByRefIdAsync(int? refId, byte? module, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the workstatus_sp_GetWorkstatusesByRefIdAndType stored procedure.
    /// </summary>
    Task<List<workstatus_sp_GetWorkstatusesByRefIdAndTypeResult>> workstatus_sp_GetWorkstatusesByRefIdAndTypeAsync(int? refId, byte? module, int? workstatusType, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the workstatus_sp_GetWorkstatusTypes stored procedure.
    /// </summary>
    Task<List<workstatus_sp_GetWorkstatusTypesResult>> workstatus_sp_GetWorkstatusTypesAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the workstatus_sp_InsertWorkstatus stored procedure.
    /// </summary>
    Task<int> workstatus_sp_InsertWorkstatusAsync(int? refId, byte? module, int? workstatusType, string? workstatusText, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the workstatus_sp_UpdateWorkstatus stored procedure.
    /// </summary>
    Task<int> workstatus_sp_UpdateWorkstatusAsync(int? workstatusId, string? workstatusText, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Retrieves special cases.
    /// </summary>
    /// <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
    /// <returns>A list of special cases results.</returns>
    Task<List<core_lod_sp_GetSpecialCasesResult>> core_lod_sp_GetSpecialCasesAsync(CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the GetReinvestigationRequests stored procedure.
    /// </summary>
    /// <param name="userId">The optional user identifier to filter requests. Pass null to retrieve all requests.</param>
    /// <param name="sarc">The optional SARC flag to filter requests. Pass null to ignore this filter.</param>
    /// <param name="returnValue">An optional output parameter to capture the stored procedure's return value.</param>
    /// <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
    /// <returns>A task representing the asynchronous operation, containing a list of reinvestigation request results.</returns>
    /// <exception cref="OperationCanceledException">Thrown when the operation is canceled via the cancellation token.</exception>
    /// <exception cref="SqlException">Thrown when there is an error executing the stored procedure.</exception>
    Task<List<core_lod_sp_GetReinvestigationRequestsResult>> GetReinvestigationRequestsAsync(int? userId, bool? sarc, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_AssocaitedCases_SaveAssociatedCases stored procedure.
    /// </summary>
    Task<int> core_AssocaitedCases_SaveAssociatedCasesAsync(int? refId, int? workflowId, DataTable? associated_refIds, DataTable? associated_workflowIds, DataTable? associated_CaseIds, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_AssociatedCases_GetAssociatedCases stored procedure.
    /// </summary>
    Task<List<core_AssociatedCases_GetAssociatedCasesResult>> core_AssociatedCases_GetAssociatedCasesAsync(int? refId, int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_AssociatedCases_GetAssociatedCasesLOD stored procedure.
    /// </summary>
    Task<List<core_AssociatedCases_GetAssociatedCasesLODResult>> core_AssociatedCases_GetAssociatedCasesLODAsync(int? refId, int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseComments_GetByCase stored procedure.
    /// </summary>
    Task<List<core_CaseComments_GetByCaseResult>> core_CaseComments_GetByCaseAsync(int? refid, int? module, int? commentType, bool? sorted, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseComments_GetById stored procedure.
    /// </summary>
    Task<List<core_CaseComments_GetByIdResult>> core_CaseComments_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseComments_SaveOrUpdateComment stored procedure.
    /// </summary>
    Task<int> core_CaseComments_SaveOrUpdateCommentAsync(int? id, int? refId, int? module, string? comment, int? userId, DateTime? createdDate, int? deleted, int? commentType, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseDialogueComments_GetByCase stored procedure.
    /// </summary>
    Task<List<core_CaseDialogueComments_GetByCaseResult>> core_CaseDialogueComments_GetByCaseAsync(int? refid, int? module, int? commentType, bool? sorted, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseDialogueComments_GetById stored procedure.
    /// </summary>
    Task<List<core_CaseDialogueComments_GetByIdResult>> core_CaseDialogueComments_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseDialogueComments_SaveOrUpdateComment stored procedure.
    /// </summary>
    Task<int> core_CaseDialogueComments_SaveOrUpdateCommentAsync(int? id, int? refId, int? module, string? comment, int? userId, DateTime? createdDate, int? deleted, int? commentType, string? role, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseDialogueComments_UpdateComment stored procedure.
    /// </summary>
    Task<int> core_CaseDialogueComments_UpdateCommentAsync(int? id, string? comment, DateTime? createdDate, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseType_sp_GetAll stored procedure.
    /// </summary>
    Task<List<core_CaseType_sp_GetAllResult>> core_CaseType_sp_GetAllAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseType_sp_GetAllSubCaseTypes stored procedure.
    /// </summary>
    Task<List<core_CaseType_sp_GetAllSubCaseTypesResult>> core_CaseType_sp_GetAllSubCaseTypesAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseType_sp_GetById stored procedure.
    /// </summary>
    Task<List<core_CaseType_sp_GetByIdResult>> core_CaseType_sp_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseType_sp_GetCaseTypeWorkflows stored procedure.
    /// </summary>
    Task<List<core_CaseType_sp_GetCaseTypeWorkflowsResult>> core_CaseType_sp_GetCaseTypeWorkflowsAsync(int? caseTypeId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseType_sp_GetSubCaseTypes stored procedure.
    /// </summary>
    Task<List<core_CaseType_sp_GetSubCaseTypesResult>> core_CaseType_sp_GetSubCaseTypesAsync(int? caseTypeId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseType_sp_GetWorkflowCaseTypes stored procedure.
    /// </summary>
    Task<List<core_CaseType_sp_GetWorkflowCaseTypesResult>> core_CaseType_sp_GetWorkflowCaseTypesAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseType_sp_Insert stored procedure.
    /// </summary>
    Task<int> core_CaseType_sp_InsertAsync(string? name, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseType_sp_InsertSubCaseType stored procedure.
    /// </summary>
    Task<int> core_CaseType_sp_InsertSubCaseTypeAsync(string? name, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseType_sp_Update stored procedure.
    /// </summary>
    Task<int> core_CaseType_sp_UpdateAsync(int? id, string? name, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseType_sp_UpdateCaseTypeSubCaseTypeMaps stored procedure.
    /// </summary>
    Task<int> core_CaseType_sp_UpdateCaseTypeSubCaseTypeMapsAsync(int? caseTypeId, DataTable? subCaseTypeIds, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseType_sp_UpdateCaseTypeWorkflowMaps stored procedure.
    /// </summary>
    Task<int> core_CaseType_sp_UpdateCaseTypeWorkflowMapsAsync(int? caseTypeId, DataTable? workflowIds, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CaseType_sp_UpdateSubCaseType stored procedure.
    /// </summary>
    Task<int> core_CaseType_sp_UpdateSubCaseTypeAsync(int? id, string? name, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CertificationStamp_sp_GetAll stored procedure.
    /// </summary>
    Task<List<core_CertificationStamp_sp_GetAllResult>> core_CertificationStamp_sp_GetAllAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CertificationStamp_sp_GetById stored procedure.
    /// </summary>
    Task<List<core_CertificationStamp_sp_GetByIdResult>> core_CertificationStamp_sp_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CertificationStamp_sp_GetCerticationStampWorkflows stored procedure.
    /// </summary>
    Task<List<core_CertificationStamp_sp_GetCerticationStampWorkflowsResult>> core_CertificationStamp_sp_GetCerticationStampWorkflowsAsync(int? stampId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CertificationStamp_sp_GetParameterFieldData stored procedure.
    /// </summary>
    Task<List<core_CertificationStamp_sp_GetParameterFieldDataResult>> core_CertificationStamp_sp_GetParameterFieldDataAsync(int? refId, bool? selectSecondary, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CertificationStamp_sp_GetSpecialCaseStamp stored procedure.
    /// </summary>
    Task<List<core_CertificationStamp_sp_GetSpecialCaseStampResult>> core_CertificationStamp_sp_GetSpecialCaseStampAsync(int? refId, bool? selectSecondary, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CertificationStamp_sp_GetWorkflowCertificationStamps stored procedure.
    /// </summary>
    Task<List<core_CertificationStamp_sp_GetWorkflowCertificationStampsResult>> core_CertificationStamp_sp_GetWorkflowCertificationStampsAsync(int? workflowId, bool? isQualified, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CertificationStamp_sp_Insert stored procedure.
    /// </summary>
    Task<int> core_CertificationStamp_sp_InsertAsync(string? name, string? body, bool? isQualified, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CertificationStamp_sp_Update stored procedure.
    /// </summary>
    Task<int> core_CertificationStamp_sp_UpdateAsync(int? id, string? name, string? body, bool? isQualified, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CertificationStamp_sp_UpdateCertificationStampWorkflowMaps stored procedure.
    /// </summary>
    Task<int> core_CertificationStamp_sp_UpdateCertificationStampWorkflowMapsAsync(int? stampId, DataTable? workflowIds, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_ChildCaseComment_GetByCase stored procedure.
    /// </summary>
    Task<List<core_ChildCaseComment_GetByCaseResult>> core_ChildCaseComment_GetByCaseAsync(int? refid, int? module, int? commentType, int? commentId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_ChildCaseComment_GetById stored procedure.
    /// </summary>
    Task<List<core_ChildCaseComment_GetByIdResult>> core_ChildCaseComment_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_ChildCaseComments_SaveOrUpdateComment stored procedure.
    /// </summary>
    Task<int> core_ChildCaseComments_SaveOrUpdateCommentAsync(int? id, int? refId, int? module, string? comment, int? userId, DateTime? createdDate, int? commentType, int? commentId, string? role, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_ChildCaseComments_UpdateComment stored procedure.
    /// </summary>
    Task<int> core_ChildCaseComments_UpdateCommentAsync(int? id, string? comment, DateTime? createdDate, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CompletedByGroup_sp_GetAll stored procedure.
    /// </summary>
    Task<List<core_CompletedByGroup_sp_GetAllResult>> core_CompletedByGroup_sp_GetAllAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CompletedByGroup_sp_GetById stored procedure.
    /// </summary>
    Task<List<core_CompletedByGroup_sp_GetByIdResult>> core_CompletedByGroup_sp_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CompletedByGroup_sp_GetCompletedByGroupWorkflows stored procedure.
    /// </summary>
    Task<List<core_CompletedByGroup_sp_GetCompletedByGroupWorkflowsResult>> core_CompletedByGroup_sp_GetCompletedByGroupWorkflowsAsync(int? completedByGroupId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CompletedByGroup_sp_GetWorkflowCompletedByGroups stored procedure.
    /// </summary>
    Task<List<core_CompletedByGroup_sp_GetWorkflowCompletedByGroupsResult>> core_CompletedByGroup_sp_GetWorkflowCompletedByGroupsAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CompletedByGroup_sp_Insert stored procedure.
    /// </summary>
    Task<int> core_CompletedByGroup_sp_InsertAsync(string? name, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CompletedByGroup_sp_Update stored procedure.
    /// </summary>
    Task<int> core_CompletedByGroup_sp_UpdateAsync(int? id, string? name, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_CompletedByGroup_sp_UpdateCompletedByGroupWorkflowMaps stored procedure.
    /// </summary>
    Task<int> core_CompletedByGroup_sp_UpdateCompletedByGroupWorkflowMapsAsync(int? completedByGroupId, DataTable? workflowIds, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_email_sp_GetAll stored procedure.
    /// </summary>
    Task<List<core_email_sp_GetAllResult>> core_email_sp_GetAllAsync(string? compo, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_email_sp_GetEmailByID stored procedure.
    /// </summary>
    Task<List<core_email_sp_GetEmailByIDResult>> core_email_sp_GetEmailByIDAsync(int? templateID, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_email_sp_GetEmailByName stored procedure.
    /// </summary>
    Task<List<core_email_sp_GetEmailByNameResult>> core_email_sp_GetEmailByNameAsync(string? title, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_email_sp_Insert stored procedure.
    /// </summary>
    Task<int> core_email_sp_InsertAsync(string? compo, string? subject, string? body, string? title, string? dataProc, int? status, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_email_sp_UpdateEmailByID stored procedure.
    /// </summary>
    Task<int> core_email_sp_UpdateEmailByIDAsync(int? templateID, string? subject, string? body, string? title, string? dataProc, bool? status, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_GetRoleAbbre stored procedure.
    /// </summary>
    Task<List<core_GetRoleAbbreResult>> core_GetRoleAbbreAsync(string? groups, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_GetStateAbbre stored procedure.
    /// </summary>
    Task<List<core_GetStateAbbreResult>> core_GetStateAbbreAsync(string? states, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_ClearViewByGroups stored procedure.
    /// </summary>
    Task<int> core_group_sp_ClearViewByGroupsAsync(short? groupId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_Delete stored procedure.
    /// </summary>
    Task<List<core_group_sp_DeleteResult>> core_group_sp_DeleteAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_GetAll stored procedure.
    /// </summary>
    Task<List<core_group_sp_GetAllResult>> core_group_sp_GetAllAsync(int? compo, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_GetAllWithManaged stored procedure.
    /// </summary>
    Task<List<core_group_sp_GetAllWithManagedResult>> core_group_sp_GetAllWithManagedAsync(short? groupId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_GetByCompo stored procedure.
    /// </summary>
    Task<List<core_group_sp_GetByCompoResult>> core_group_sp_GetByCompoAsync(string? compo, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_GetByCompoAndAdmin stored procedure.
    /// </summary>
    Task<List<core_group_sp_GetByCompoAndAdminResult>> core_group_sp_GetByCompoAndAdminAsync(string? compo, byte? adminCurrentGroupId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_GetByCompoOnly stored procedure.
    /// </summary>
    Task<List<core_group_sp_GetByCompoOnlyResult>> core_group_sp_GetByCompoOnlyAsync(string? compo, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_GetManaged stored procedure.
    /// </summary>
    Task<List<core_group_sp_GetManagedResult>> core_group_sp_GetManagedAsync(short? groupId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_GetManagedDropDown stored procedure.
    /// </summary>
    Task<List<core_group_sp_GetManagedDropDownResult>> core_group_sp_GetManagedDropDownAsync(short? groupId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_GetViewBy stored procedure.
    /// </summary>
    Task<List<core_group_sp_GetViewByResult>> core_group_sp_GetViewByAsync(short? groupId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_Insert stored procedure.
    /// </summary>
    Task<int> core_group_sp_InsertAsync(string? name, string? abbr, string? compo, byte? accessScope, bool? active, bool? partialMatch, bool? showInfo, bool? hipaaRequired, bool? canRegister, byte? sortOrder, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_lkupCompos stored procedure.
    /// </summary>
    Task<List<core_group_sp_lkupComposResult>> core_group_sp_lkupComposAsync(string? compo, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_Update stored procedure.
    /// </summary>
    Task<int> core_group_sp_UpdateAsync(int? groupId, string? name, string? abbr, string? compo, byte? accessScope, bool? active, bool? partialMatch, bool? showInfo, bool? hipaaRequired, bool? canRegister, byte? sortOrder, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_UpdateGroupPermissions stored procedure.
    /// </summary>
    Task<int> core_group_sp_UpdateGroupPermissionsAsync(short? groupId, string? xmlDocument, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_UpdateManagedGroups stored procedure.
    /// </summary>
    Task<int> core_group_sp_UpdateManagedGroupsAsync(short? groupId, string? xmlDocument, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_group_sp_UpdateViewByGroups stored procedure.
    /// </summary>
    Task<int> core_group_sp_UpdateViewByGroupsAsync(short? viewerId, short? memberId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_ICD_sp_Find7thCharacters stored procedure.
    /// </summary>
    Task<List<core_ICD_sp_Find7thCharactersResult>> core_ICD_sp_Find7thCharactersAsync(int? codeId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_ICD_sp_FindCode stored procedure.
    /// </summary>
    Task<List<core_ICD_sp_FindCodeResult>> core_ICD_sp_FindCodeAsync(string? value, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_ICD_sp_FindCodeVersion stored procedure.
    /// </summary>
    Task<List<core_ICD_sp_FindCodeVersionResult>> core_ICD_sp_FindCodeVersionAsync(int? codeId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_ICD_sp_FindNatureOfIncidentValues stored procedure.
    /// </summary>
    Task<List<core_ICD_sp_FindNatureOfIncidentValuesResult>> core_ICD_sp_FindNatureOfIncidentValuesAsync(int? codeId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_ICD_sp_GetChildren stored procedure.
    /// </summary>
    Task<List<core_ICD_sp_GetChildrenResult>> core_ICD_sp_GetChildrenAsync(int? parentId, int? version, bool? onlyActive, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetIsReinvestigationLod stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetIsReinvestigationLodResult>> core_lod_sp_GetIsReinvestigationLodAsync(int? lodId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetLODListByMemberSSN stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetLODListByMemberSSNResult>> core_lod_sp_GetLODListByMemberSSNAsync(string? memberSSN, int? searchType, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetLODPostCompletion stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetLODPostCompletionResult>> core_lod_sp_GetLODPostCompletionAsync(int? lodId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetPALDataByMemberSSN stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetPALDataByMemberSSNResult>> core_lod_sp_GetPALDataByMemberSSNAsync(string? member_ssn, string? member_lastname, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetPendingCount stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetPendingCountResult>> core_lod_sp_GetPendingCountAsync(int? userId, bool? sarc, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetPendingCount_LODV3 stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetPendingCount_LODV3Result>> core_lod_sp_GetPendingCount_LODV3Async(int? userId, bool? sarc, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetPendingIOCount stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetPendingIOCountResult>> core_lod_sp_GetPendingIOCountAsync(int? userId, bool? sarc, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetPSCDSpecialCaseNotHolding stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetPSCDSpecialCaseNotHoldingResult>> core_lod_sp_GetPSCDSpecialCaseNotHoldingAsync(int? moduleId, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetReinvestigationLodFindings stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetReinvestigationLodFindingsResult>> core_lod_sp_GetReinvestigationLodFindingsAsync(int? initialLodId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetReinvestigationRequestId stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetReinvestigationRequestIdResult>> core_lod_sp_GetReinvestigationRequestIdAsync(int? lodId, int? idType, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetReinvestigationRequests stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetReinvestigationRequestsResult>> core_lod_sp_GetReinvestigationRequestsAsync(int? userId, bool? sarc, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetReinvestigationRequestsCount stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetReinvestigationRequestsCountResult>> core_lod_sp_GetReinvestigationRequestsCountAsync(int? initialLODId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetReinvestigationsCount stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetReinvestigationsCountResult>> core_lod_sp_GetReinvestigationsCountAsync(int? userId, bool? sarc, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetSpecialCaseDisposition stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetSpecialCaseDispositionResult>> core_lod_sp_GetSpecialCaseDispositionAsync(int? moduleId, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetSpecialCaseHolding stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetSpecialCaseHoldingResult>> core_lod_sp_GetSpecialCaseHoldingAsync(int? moduleId, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetSpecialCaseNoDisposition stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetSpecialCaseNoDispositionResult>> core_lod_sp_GetSpecialCaseNoDispositionAsync(int? moduleId, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetSpecialCaseNotHolding stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetSpecialCaseNotHoldingResult>> core_lod_sp_GetSpecialCaseNotHoldingAsync(int? moduleId, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetSpecialCaseNotHoldingCount stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetSpecialCaseNotHoldingCountResult>> core_lod_sp_GetSpecialCaseNotHoldingCountAsync(int? moduleId, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetSpecialCases stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetSpecialCasesResult>> core_lod_sp_GetSpecialCasesAsync(int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetSpecialCases_Paging stored procedure with basic paging support.
    /// </summary>
    Task<List<core_lod_sp_GetSpecialCases_PagingResult>> core_lod_sp_GetSpecialCases_PagingAsync(int? userId, int? pageNumber, int? pageSize, OutputParameter<int>? totalCount, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetSpecialCases_Paging_Full stored procedure with advanced paging, sorting, and filtering.
    /// </summary>
    Task<List<core_lod_sp_GetSpecialCases_Paging_FullResult>> core_lod_sp_GetSpecialCases_Paging_FullAsync(int? userId, int? pageNumber, int? pageSize, OutputParameter<int>? totalCount, string? sortColumn, string? sortDirection, string? statusFilter, string? moduleFilter, string? daysFilter, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetSpecialCasesByMemberSSN stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetSpecialCasesByMemberSSNResult>> core_lod_sp_GetSpecialCasesByMemberSSNAsync(string? member_ssn, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetSpecialCasesByModuleCount stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetSpecialCasesByModuleCountResult>> core_lod_sp_GetSpecialCasesByModuleCountAsync(int? userId, int? moduleId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetSpecialCasesByModuleId stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetSpecialCasesByModuleIdResult>> core_lod_sp_GetSpecialCasesByModuleIdAsync(int? userId, int? moduleId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetSpecialCasesCount stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetSpecialCasesCountResult>> core_lod_sp_GetSpecialCasesCountAsync(int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetWorkflow stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetWorkflowResult>> core_lod_sp_GetWorkflowAsync(int? lODid, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetWSID stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetWSIDResult>> core_lod_sp_GetWSIDAsync(int? iD, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_GetWWDListByMemberSSN stored procedure.
    /// </summary>
    Task<List<core_lod_sp_GetWWDListByMemberSSNResult>> core_lod_sp_GetWWDListByMemberSSNAsync(string? memberSSN, int? searchType, int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_SetLODPostCompletion stored procedure.
    /// </summary>
    Task<int> core_lod_sp_SetLODPostCompletionAsync(int? lodId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_UpdateAppealPostCompletion stored procedure.
    /// </summary>
    Task<int> core_lod_sp_UpdateAppealPostCompletionAsync(int? appealId, int? lodId, string? appealStreet, string? appealCity, string? appealState, string? appealZip, string? appealCountry, DateOnly? memberNotificationDate, string? helpExtensionNumber, string? email, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lod_sp_UpdateLODPostCompletion stored procedure.
    /// </summary>
    Task<int> core_lod_sp_UpdateLODPostCompletionAsync(int? lodId, string? helpExtensionNumber, string? appealStreet, string? appealCity, string? appealState, string? appealZip, string? appealCountry, string? nokFirstName, string? nokLastName, string? nokMiddleName, DateTime? notificationDate, string? email, bool? chkAddress, bool? chkEmail, bool? chkPhone, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_log_sp_GetChangeSetByLogId stored procedure.
    /// </summary>
    Task<List<core_log_sp_GetChangeSetByLogIdResult>> core_log_sp_GetChangeSetByLogIdAsync(int? logId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_log_sp_GetChangeSetByUserId stored procedure.
    /// </summary>
    Task<List<core_log_sp_GetChangeSetByUserIdResult>> core_log_sp_GetChangeSetByUserIdAsync(int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_log_sp_GetChangeSetDetails stored procedure.
    /// </summary>
    Task<List<core_log_sp_GetChangeSetDetailsResult>> core_log_sp_GetChangeSetDetailsAsync(string? logIds, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_log_sp_GetChangeSetsByRefId stored procedure.
    /// </summary>
    Task<List<core_log_sp_GetChangeSetsByRefIdResult>> core_log_sp_GetChangeSetsByRefIdAsync(int? refId, byte? module, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_log_sp_GetErrorById stored procedure.
    /// </summary>
    Task<List<core_log_sp_GetErrorByIdResult>> core_log_sp_GetErrorByIdAsync(int? iD, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_log_sp_GetErrors stored procedure.
    /// </summary>
    Task<List<core_log_sp_GetErrorsResult>> core_log_sp_GetErrorsAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_log_sp_GetLastChange stored procedure.
    /// </summary>
    Task<List<core_log_sp_GetLastChangeResult>> core_log_sp_GetLastChangeAsync(int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_log_sp_InsertChangeSet stored procedure.
    /// </summary>
    Task<int> core_log_sp_InsertChangeSetAsync(string? changerows, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_log_sp_LogPageGenerationTime stored procedure.
    /// </summary>
    Task<List<core_log_sp_LogPageGenerationTimeResult>> core_log_sp_LogPageGenerationTimeAsync(DateTime? action_date, string? measuredTime, string? currentPage, string? referringPage, string? username, string? role, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_log_sp_RecordAction stored procedure.
    /// </summary>
    Task<List<core_log_sp_RecordActionResult>> core_log_sp_RecordActionAsync(byte? moduleId, byte? actionId, int? userId, int? referenceId, string? notes, int? status, int? newStatus, string? address, OutputParameter<int?> logId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_log_sp_RecordEmail stored procedure.
    /// </summary>
    Task<List<core_log_sp_RecordEmailResult>> core_log_sp_RecordEmailAsync(int? userId, string? eTo, string? eCC, string? eBCC, string? subject, string? body, string? failed, int? templateId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_log_sp_RecordError stored procedure.
    /// </summary>
    Task<int> core_log_sp_RecordErrorAsync(string? userName, string? page, string? version, string? browser, string? message, string? stacktrace, string? caller, string? address, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookups_sp_GetMemberComponentsByWorkflow stored procedure.
    /// </summary>
    Task<List<core_lookups_sp_GetMemberComponentsByWorkflowResult>> core_lookups_sp_GetMemberComponentsByWorkflowAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_GetMemberPSCDCategory stored procedure.
    /// </summary>
    Task<List<core_lookUps_sp_GetMemberPSCDCategoryResult>> core_lookUps_sp_GetMemberPSCDCategoryAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_GetMemberPSCDStatus stored procedure.
    /// </summary>
    Task<List<core_lookUps_sp_GetMemberPSCDStatusResult>> core_lookUps_sp_GetMemberPSCDStatusAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_GetPasCodeChainType stored procedure.
    /// </summary>
    Task<List<core_lookUps_sp_GetPasCodeChainTypeResult>> core_lookUps_sp_GetPasCodeChainTypeAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_GetPEPPCaseTypes stored procedure.
    /// </summary>
    Task<List<core_lookUps_sp_GetPEPPCaseTypesResult>> core_lookUps_sp_GetPEPPCaseTypesAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_GetPEPPDispositions stored procedure.
    /// </summary>
    Task<List<core_lookUps_sp_GetPEPPDispositionsResult>> core_lookUps_sp_GetPEPPDispositionsAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_GetPEPPRatings stored procedure.
    /// </summary>
    Task<List<core_lookUps_sp_GetPEPPRatingsResult>> core_lookUps_sp_GetPEPPRatingsAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_GetPEPPTypes stored procedure.
    /// </summary>
    Task<List<core_lookUps_sp_GetPEPPTypesResult>> core_lookUps_sp_GetPEPPTypesAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookups_sp_GetRMUById stored procedure.
    /// </summary>
    Task<List<core_lookups_sp_GetRMUByIdResult>> core_lookups_sp_GetRMUByIdAsync(int? rmuId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookups_sp_GetWorkflowDispositions stored procedure.
    /// </summary>
    Task<List<core_lookups_sp_GetWorkflowDispositionsResult>> core_lookups_sp_GetWorkflowDispositionsAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_InfoSources stored procedure.
    /// </summary>
    Task<List<core_lookUps_sp_InfoSourcesResult>> core_lookUps_sp_InfoSourcesAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookups_sp_Insert_MAJCOM stored procedure.
    /// </summary>
    Task<int> core_lookups_sp_Insert_MAJCOMAsync(string? majcom, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookups_sp_Insert_PEPPDisposition stored procedure.
    /// </summary>
    Task<int> core_lookups_sp_Insert_PEPPDispositionAsync(string? disposition, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookups_sp_Insert_PEPPRating stored procedure.
    /// </summary>
    Task<int> core_lookups_sp_Insert_PEPPRatingAsync(string? rating, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookups_sp_Insert_PEPPType stored procedure.
    /// </summary>
    Task<int> core_lookups_sp_Insert_PEPPTypeAsync(string? type, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookups_sp_Insert_RMU stored procedure.
    /// </summary>
    Task<int> core_lookups_sp_Insert_RMUAsync(string? rmu, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_InsertCategory stored procedure.
    /// </summary>
    Task<int> core_lookUps_sp_InsertCategoryAsync(string? category, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_InsertComponent stored procedure.
    /// </summary>
    Task<int> core_lookUps_sp_InsertComponentAsync(string? component, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookups_sp_InsertDisposition stored procedure.
    /// </summary>
    Task<int> core_lookups_sp_InsertDispositionAsync(string? disposition, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_InsertDutyStatus stored procedure.
    /// </summary>
    Task<int> core_lookUps_sp_InsertDutyStatusAsync(string? dutyStatus, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_InsertFacility stored procedure.
    /// </summary>
    Task<int> core_lookUps_sp_InsertFacilityAsync(string? facility, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_InsertFromLocation stored procedure.
    /// </summary>
    Task<int> core_lookUps_sp_InsertFromLocationAsync(string? fromLocation, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_InsertInfluence stored procedure.
    /// </summary>
    Task<int> core_lookUps_sp_InsertInfluenceAsync(string? influence, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_InsertInfoSource stored procedure.
    /// </summary>
    Task<int> core_lookUps_sp_InsertInfoSourceAsync(string? infoSource, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_InsertOccurrence stored procedure.
    /// </summary>
    Task<int> core_lookUps_sp_InsertOccurrenceAsync(string? occurrence, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_InsertProximate stored procedure.
    /// </summary>
    Task<int> core_lookUps_sp_InsertProximateAsync(string? proximate, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_lookUps_sp_InsertStatus stored procedure.
    /// </summary>
    Task<int> core_lookUps_sp_InsertStatusAsync(string? status, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_memo_sp_GetDataSources stored procedure.
    /// </summary>
    Task<List<core_memo_sp_GetDataSourcesResult>> core_memo_sp_GetDataSourcesAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_messages_sp_GetAll stored procedure.
    /// </summary>
    Task<List<core_messages_sp_GetAllMessagesResult>> core_messages_sp_GetAllAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_messages_sp_GetById stored procedure.
    /// </summary>
    Task<List<core_messages_sp_GetMessagesDetailsResult>> core_messages_sp_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_messages_sp_GetByType stored procedure.
    /// </summary>
    Task<List<core_messages_sp_GetMessagesResult>> core_messages_sp_GetByTypeAsync(int? type, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_messages_sp_Insert stored procedure.
    /// </summary>
    Task<int> core_messages_sp_InsertAsync(string? title, string? message, int? type, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_messages_sp_Update stored procedure.
    /// </summary>
    Task<int> core_messages_sp_UpdateAsync(int? id, string? title, string? message, int? type, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_pageTitles_sp_GetAll stored procedure.
    /// </summary>
    Task<List<core_pageTitles_sp_GetAllPagesResult>> core_pageTitles_sp_GetAllAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_pageTitles_sp_GetById stored procedure.
    /// </summary>
    Task<List<core_pageTitles_sp_GetAllPagesResult>> core_pageTitles_sp_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_pageTitles_sp_Insert stored procedure.
    /// </summary>
    Task<int> core_pageTitles_sp_InsertAsync(string? title, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_pageTitles_sp_Update stored procedure.
    /// </summary>
    Task<int> core_pageTitles_sp_UpdateAsync(int? id, string? title, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_pascode_sp_GetAll stored procedure.
    /// </summary>
    Task<List<core_pascodes_GetAllUserPasCodesResult>> core_pascode_sp_GetAllAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_pascode_sp_GetById stored procedure.
    /// </summary>
    Task<List<core_pascode_sp_LoadResult>> core_pascode_sp_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_pascode_sp_Insert stored procedure.
    /// </summary>
    Task<int> core_pascode_sp_InsertAsync(string? pascode, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_pascode_sp_Update stored procedure.
    /// </summary>
    Task<int> core_pascode_sp_UpdateAsync(int? id, string? pascode, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_Permission_GetByWorkflow stored procedure.
    /// </summary>
    Task<List<core_Permission_GetByWorkflowResult>> core_Permission_GetByWorkflowAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_permissions_sp_GetAll stored procedure.
    /// </summary>
    Task<List<core_permissions_sp_GetAllResult>> core_permissions_sp_GetAllAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_permissions_sp_GetById stored procedure.
    /// </summary>
    Task<List<core_permissions_sp_GetByUserIdResult>> core_permissions_sp_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_permissions_sp_GetByWorkflow stored procedure.
    /// </summary>
    Task<List<core_Permission_GetByWorkflowResult>> core_permissions_sp_GetByWorkflowAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_permissions_sp_Insert stored procedure.
    /// </summary>
    Task<int> core_permissions_sp_InsertAsync(string? permission, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_permissions_sp_Update stored procedure.
    /// </summary>
    Task<int> core_permissions_sp_UpdateAsync(int? id, string? permission, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_role_sp_GetAll stored procedure.
    /// </summary>
    Task<List<core_role_sp_GetAllResult>> core_role_sp_GetAllAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_role_sp_GetById stored procedure.
    /// </summary>
    Task<List<core_role_sp_GetByIdResult>> core_role_sp_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_role_sp_GetByWorkflow stored procedure.
    /// </summary>
    Task<List<core_role_sp_GetAllResult>> core_role_sp_GetByWorkflowAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_role_sp_Insert stored procedure.
    /// </summary>
    Task<int> core_role_sp_InsertAsync(string? role, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_role_sp_Update stored procedure.
    /// </summary>
    Task<int> core_role_sp_UpdateAsync(int? id, string? role, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_rule_sp_GetAll stored procedure.
    /// </summary>
    Task<List<core_rule_sp_GetAllResult>> core_rule_sp_GetAllAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_rule_sp_GetById stored procedure.
    /// </summary>
    Task<List<core_rule_sp_GetByIdResult>> core_rule_sp_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_rule_sp_GetByWorkflow stored procedure.
    /// </summary>
    Task<List<core_rule_sp_GetByWorkflowResult>> core_rule_sp_GetByWorkflowAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_rule_sp_Insert stored procedure.
    /// </summary>
    Task<int> core_rule_sp_InsertAsync(string? rule, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_rule_sp_Update stored procedure.
    /// </summary>
    Task<int> core_rule_sp_UpdateAsync(int? id, string? rule, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_rules_sp_GetAll stored procedure.
    /// </summary>
    Task<List<core_rules_sp_GetAllResult>> core_rules_sp_GetAllAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_rules_sp_GetById stored procedure.
    /// </summary>
    Task<List<core_rules_sp_GetByIdResult>> core_rules_sp_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_rules_sp_GetByWorkflow stored procedure.
    /// </summary>
    Task<List<core_rules_sp_GetByWorkflowResult>> core_rules_sp_GetByWorkflowAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_rules_sp_Insert stored procedure.
    /// </summary>
    Task<int> core_rules_sp_InsertAsync(string? rule, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_rules_sp_Update stored procedure.
    /// </summary>
    Task<int> core_rules_sp_UpdateAsync(int? id, string? rule, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_rwoa_GetRecent stored procedure.
    /// </summary>
    Task<List<core_rwoa_GetRecentResult>> core_rwoa_GetRecentAsync(int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_sarc_sp_GetAll stored procedure.
    /// </summary>
    Task<List<core_sarc_sp_GetAllResult>> core_sarc_sp_GetAllAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_sarc_sp_GetById stored procedure.
    /// </summary>
    Task<List<core_sarc_sp_GetByIdResult>> core_sarc_sp_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_sarc_sp_GetByWorkflow stored procedure.
    /// </summary>
    Task<List<core_sarc_sp_GetByWorkflowResult>> core_sarc_sp_GetByWorkflowAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_sarc_sp_Insert stored procedure.
    /// </summary>
    Task<int> core_sarc_sp_InsertAsync(string? sarc, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_sarc_sp_Update stored procedure.
    /// </summary>
    Task<int> core_sarc_sp_UpdateAsync(int? id, string? sarc, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_sc_sp_GetRWAssociableSpecialCases stored procedure.
    /// </summary>
    Task<List<core_sc_sp_GetRWAssociableSpecialCasesResult>> core_sc_sp_GetRWAssociableSpecialCasesAsync(int? refId, int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_Signature_sp_GetAll stored procedure.
    /// </summary>
    Task<List<core_Signature_sp_GetAllResult>> core_Signature_sp_GetAllAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_Signature_sp_GetById stored procedure.
    /// </summary>
    Task<List<core_Signature_sp_GetByIdResult>> core_Signature_sp_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_Signature_sp_GetByWorkflow stored procedure.
    /// </summary>
    Task<List<core_Signature_sp_GetByWorkflowResult>> core_Signature_sp_GetByWorkflowAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_Signature_sp_Insert stored procedure.
    /// </summary>
    Task<int> core_Signature_sp_InsertAsync(string? signature, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_Signature_sp_Update stored procedure.
    /// </summary>
    Task<int> core_Signature_sp_UpdateAsync(int? id, string? signature, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_SignatureMetaData_sp_GetAll stored procedure.
    /// </summary>
    Task<List<core_SignatureMetaData_sp_GetAllResult>> core_SignatureMetaData_sp_GetAllAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_SignatureMetaData_sp_GetById stored procedure.
    /// </summary>
    Task<List<core_SignatureMetaData_sp_GetByIdResult>> core_SignatureMetaData_sp_GetByIdAsync(int? id, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_SignatureMetaData_sp_GetByWorkflow stored procedure.
    /// </summary>
    Task<List<core_SignatureMetaData_sp_GetByWorkflowResult>> core_SignatureMetaData_sp_GetByWorkflowAsync(int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_SignatureMetaData_sp_Insert stored procedure.
    /// </summary>
    Task<int> core_SignatureMetaData_sp_InsertAsync(string? signatureMetaData, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_SignatureMetaData_sp_Update stored procedure.
    /// </summary>
    Task<int> core_SignatureMetaData_sp_UpdateAsync(int? id, string? signatureMetaData, string? description, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the core_sp_GetIRILOAssociableSpecialCases stored procedure.
    /// </summary>
    Task<List<core_sp_GetIRILOAssociableSpecialCasesResult>> core_sp_GetIRILOAssociableSpecialCasesAsync(int? refId, int? workflowId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the form348_sp_PostCompletionSearch_TEMP stored procedure (temporary version for post completion searches).
    /// </summary>
    Task<List<form348_sp_PostCompletionSearch_TEMPResult>> form348_sp_PostCompletionSearch_TEMPAsync(int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the imp_ImportSigDates stored procedure for importing signature dates during data import.
    /// </summary>
    Task<int> imp_ImportSigDatesAsync(OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);

    /// <summary>
    /// Asynchronously executes the tmp_report_sp_GetDisposition stored procedure (temporary report version for disposition data).
    /// </summary>
    Task<List<tmp_report_sp_GetDispositionResult>> tmp_report_sp_GetDispositionAsync(int? userId, OutputParameter<int>? returnValue = null, CancellationToken? cancellationToken = default);
}
