
-- ============================================================================
-- Author:		Ken Barnett
-- Create date: 4/20/2017
-- Description:	- Initial procedure creation. 
--				- Responsible for pulling the data
--				needed to be merged into the memos generated by the Retention
--				Waiver Renewal (RW) workflow. 
--				- This procedure was based off of the memo_sp_IRILO procedure.
-- ============================================================================
CREATE PROCEDURE [dbo].[memo_sp_RetentionWaiver]
	@refId int
AS
BEGIN
	DECLARE @results TABLE
	(
		id varchar(100),
		value varchar(MAX)
	);

	DECLARE	@name varchar(100), 
			@unit varchar(100),  
			@rank varchar(6), 
			@address varchar(200), 
			@member_ssn varchar(12), 
			@diagnosis varchar(50), 
			@paraInfo varchar(20) = '2.11',
			@gender1 varchar(6),
			@gender2 varchar(6), 
			@gender1a varchar(1), 
			@expirationDate datetime,			-- Data Location: Expiration/Renewal data field in Med Off tab. 
			@returnToDuty datetime,				-- Data Location: Return to Duty data field in Med Off tab.
			@diagnosisText varchar(200),		-- Data Location: diagnosis text box in Med Off tab. 
			@dqParagraphInfo varchar(200),		-- Data Location: DQ Paragraph field in Med Off tab. 
			@alc varchar(6),					-- Data Location: ALC dropdown field in Med Off tab. 
			@alcParagraph varchar(Max),			-- Data Location: core_KeyVal_Value table
			@rmu varchar(100),				    -- Data Location: RMU name dropdown in Med Tech tab. 
			@medGroup varchar(100),				-- Data Location: Med Group Name dropdown in Med Tech tab.
			@keyDesc VARCHAR(20) = 'HQ AFRC Address',
			@keyId INT = 0,
			@hqAddrLine1 varchar(100),
			@hqAddrLine2 varchar(100),
			@hqAddrLine3 varchar(100),
			@davValue varchar(5),
			@alcDAVLine varchar(250) = '',
			@caseId VARCHAR(50) = '',
			@decision VARCHAR(1)

			

	SELECT	@caseId = SpecialCase.case_id,
			@name = MD.LAST_NAME + ', ' + MD.FIRST_NAME + ' ' + ISNULL(MD.MIDDLE_NAMES,''),
			@unit = Member_Unit,
			@rank = Grade.RANK,
			@member_ssn = RIGHT(MD.SSN,4),
			@gender1a = md2.SEX_SVC_MBR, 
			@diagnosis = icd9_description, --this field to 
			@expirationDate = Expiration_Date, --this field to 
			@returnToDuty = Return_To_Duty_Date, --this field to 
			@diagnosisText = FT_Diagnosis, --this field to 
			@dqParagraphInfo = DQ_Paragraph, --this field to 
			@alc = ALC_Letter_Type, --this field to Alternate_ALC_Letter_Type
			@medGroup = MedGroup.MTF,
			@rmu = RMU.RMU,
			@decision = SpecialCase.senior_medical_reviewer_concur
	FROM	Form348_SC SpecialCase
			LEFT JOIN core_lkupGrade Grade ON Grade.CODE = SpecialCase.member_grade
			LEFT JOIN VW_MEMBERDATA MD ON MD.ssn= SpecialCase.member_ssn
			LEFT JOIN MemberData md2 on md2.SSAN = md.SSN
			LEFT JOIN core_lkupRMUs RMU on RMU.Id = SpecialCase.RMU_Name		
			LEFT JOIN core_lkupMedGroups MedGroup ON MedGroup.Id = SpecialCase.Med_Group_Name		
	WHERE	SpecialCase.SC_Id = @refId


	--ZACH UPDATE 1/2/2019
	--senior_medical_reviewer_concur
	if (@decision = 'N')
	BEGIN
		
		SELECT	@caseId = SpecialCase.case_id,
				@name = MD.LAST_NAME + ', ' + MD.FIRST_NAME + ' ' + ISNULL(MD.MIDDLE_NAMES,''),
				@unit = Member_Unit,
				@rank = Grade.RANK,
				@member_ssn = RIGHT(MD.SSN,4),
				@gender1a = md2.SEX_SVC_MBR, 
				@expirationDate = Alternate_Expiration_Date, --this field to Alternate_Expiration_Date
				@returnToDuty = Alternate_Return_To_Duty_Date, --this field to Alternate_Return_To_Duty_Date
				@dqParagraphInfo = Alternate_DQ_Paragraph, --this field to Alternate_DQ_Paragraph
				@alc = Alternate_ALC_Letter_Type, --this field to Alternate_ALC_Letter_Type
				@medGroup = MedGroup.MTF,
				@rmu = RMU.RMU,
				@decision = SpecialCase.senior_medical_reviewer_concur
		FROM	Form348_SC SpecialCase
				LEFT JOIN core_lkupGrade Grade ON Grade.CODE = SpecialCase.member_grade
				LEFT JOIN VW_MEMBERDATA MD ON MD.ssn= SpecialCase.member_ssn
				LEFT JOIN MemberData md2 on md2.SSAN = md.SSN
				LEFT JOIN core_lkupRMUs RMU on RMU.Id = SpecialCase.RMU_Name		
				LEFT JOIN core_lkupMedGroups MedGroup ON MedGroup.Id = SpecialCase.Med_Group_Name		
		WHERE	SpecialCase.SC_Id = @refId

	END


	IF (@alc > 0)
	BEGIN
		-- Select ALC paragraph value...
		SELECT @alcParagraph = [Value] FROM core_KeyVal_Value
		WHERE [Key_Id] = 1 AND [Value_Id] = @alc

		-- Select DAV value...
		SELECT	@keyId = Id
		FROM	core_KeyVal_Key
		WHERE	[Description] = 'ALC DAV Values'
	
		IF @keyId > 0
			BEGIN
		
			SELECT	@davValue = v.Value
			FROM	core_KeyVal_Value v
			WHERE	v.Key_Id = @keyId
					AND v.Value_Id = @alc
		
			END

		-- Select ALC_DAV_Line value...
		SET @keyId = 0
	
		SELECT	@keyId = Id
		FROM	core_KeyVal_Key
		WHERE	[Description] = 'MPF ALC/DAV Line'
	
		IF @keyId > 0
		BEGIN
			SELECT	@alcDAVLine = v.Value
			FROM	core_KeyVal_Value v
			WHERE	v.Key_Id = @keyId
					AND v.Value_Id = 1
		END
	END

	SET @keyId = 0

	SELECT	@keyId = Id
	FROM	core_KeyVal_Key
	WHERE	[Description] = @keyDesc

	IF @keyId > 0
	BEGIN
		-- Select unit name value
		SELECT	@hqAddrLine1 = [Value]
		FROM	core_KeyVal_Value
		WHERE	[Key_Id] = @keyId AND
				[Value_Id] = 1
			
		-- Select street address value
		SELECT	@hqAddrLine2 = [Value]
		FROM	core_KeyVal_Value
		WHERE	[Key_Id] = @keyId AND
				[Value_Id] = 2

		-- Select city/base value
		SELECT	@hqAddrLine3 = [Value]
		FROM	core_KeyVal_Value
		WHERE	[Key_Id] = @keyId AND
				[Value_Id] = 3
			
		-- Select the state value
		SELECT	@hqAddrLine3 = @hqAddrLine3 + ' ' + [Value]
		FROM	core_KeyVal_Value
		WHERE	[Key_Id] = @keyId AND
				[Value_Id] = 4 AND
				[Value] IS NOT NULL
			
		-- Select the zip code value
		SELECT	@hqAddrLine3 = @hqAddrLine3 + ' ' + [Value]
		FROM	core_KeyVal_Value
		WHERE	[Key_Id] = @keyId AND
				[Value_Id] = 5 AND
				[Value] IS NOT NULL
	END


	
	SET @gender1 = 'Member'
	SET @gender2 = 'their'

	IF @gender1a = 'M'
	BEGIN
		SET @gender1 = 'He'
		SET @gender2 = 'his'
	END

	IF @gender1a = 'F'
	BEGIN
		SET @gender1 = 'She'
		SET @gender2 = 'her'
	END
	--SET @address = (SELECT LOCAL_ADDR_STREET + ' ' + LOCAL_ADDR_CITY + ', ' + LOCAL_ADDR_STATE + ' ' + ADRS_MAIL_ZIP
	--					FROM MemberData WHERE SSAN = (SELECT member_ssn FROM Form348_SC WHERE SC_Id  = @refId)
	--				)

	--INSERT INTO @results (id, value) VALUES ('APPROVING_AUTHORITY', @appAuthName);
	INSERT INTO @results (id, value) VALUES ('MEMBER_NAME', @name);
	INSERT INTO @results (id, value) VALUES ('MEMBER_RANK', @rank);
	INSERT INTO @results (id, value) VALUES ('MEMBER_UNIT_NAME', @unit);
	--INSERT INTO @results (id, value) VALUES ('MEMBER_ADDRESS', @address);
	INSERT INTO @results (id, value) VALUES ('MEMBER_SSN', @member_ssn);
	INSERT INTO @results (id, value) VALUES ('DIAGNOSIS', @diagnosis);
	INSERT INTO @results (id, value) VALUES ('Gender1', @gender1);
	INSERT INTO @results (id, value) VALUES ('Gender2', @gender2);
	INSERT INTO @results (id, value) VALUES ('Expiration_Date', REPLACE(STUFF(CONVERT(VARCHAR(17), @expirationDate, 106), 4, 3, UPPER(DATENAME(month, @expirationDate))), ' ', '-'));
	INSERT INTO @results (id, value) VALUES ('Return_To_Duty_Date', REPLACE(STUFF(CONVERT(VARCHAR(17), @returnToDuty, 106), 4, 3, UPPER(DATENAME(month, @returnToDuty))), ' ', '-'));
	INSERT INTO @results (id, value) VALUES ('PARAGRAPH_INFO', @paraInfo);
	INSERT INTO @results (id, value) VALUES ('ALC_DAV_LINE', @alcDAVLine);
	INSERT INTO @results (id, value) VALUES ('DIAGNOSIS_TEXT', @diagnosisText);
	INSERT INTO @results (id, value) VALUES ('DQ_PARAGRAPH_INFO', @dqParagraphInfo);
	INSERT INTO @results (id, value) VALUES ('ALC', 'C' + @alc);
	INSERT INTO @results (id, value) VALUES ('ALC_PARAGRAPH', @alcParagraph);
	INSERT INTO @results (id, value) VALUES ('MED_GROUP', @medGroup);
	INSERT INTO @results (id, value) VALUES ('RMU', @rmu);
	INSERT INTO @results (id, value) VALUES ('HQ_ADDR_LINE_1', @hqAddrLine1);
	INSERT INTO @results (id, value) VALUES ('HQ_ADDR_LINE_2', @hqAddrLine2);
	INSERT INTO @results (id, value) VALUES ('HQ_ADDR_LINE_3', @hqAddrLine3);
	INSERT INTO @results (id, value) VALUES ('DAV', @davValue);
	INSERT INTO @results (id, value) VALUES ('CASE_ID', @caseId);


	SELECT	id, value 
	FROM	@results
END
GO

